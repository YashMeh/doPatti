{
    "contractName": "Cashier",
    "abi": [
        {
            "constant": true,
            "inputs": [],
            "name": "getCoins",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_coinChange",
                    "type": "uint256"
                }
            ],
            "name": "_setCoinChange",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "getRandomCard",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "newPlayer",
            "outputs": [],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "isOwner",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address[]",
                    "name": "_addr",
                    "type": "address[]"
                }
            ],
            "name": "getWinner",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "",
                    "type": "address[]"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "deposit",
            "outputs": [],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "players",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "coins",
                    "type": "uint256"
                },
                {
                    "internalType": "uint8",
                    "name": "card",
                    "type": "uint8"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "addr",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint8",
                    "name": "card",
                    "type": "uint8"
                }
            ],
            "name": "newCard",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "addr",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "coins",
                    "type": "uint256"
                }
            ],
            "name": "NewPlayer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getCoins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_coinChange\",\"type\":\"uint256\"}],\"name\":\"_setCoinChange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getRandomCard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"newPlayer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addr\",\"type\":\"address[]\"}],\"name\":\"getWinner\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"coins\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"card\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"card\",\"type\":\"uint8\"}],\"name\":\"newCard\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coins\",\"type\":\"uint256\"}],\"name\":\"NewPlayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/media/adityachandak/Local Disk/Projects/InOut/repo/doPatti/contracts/src/cashier.sol\":\"Cashier\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/media/adityachandak/Local Disk/Projects/InOut/repo/doPatti/contracts/src/cashier.sol\":{\"keccak256\":\"0x2a24db61fb328da023c4870046bb27769827546b83f6921ea91c78f31aca9905\",\"urls\":[\"bzz-raw://9d84416ddbc89d388ada3e570dbf6992bfb506e8d58eeea729f9cc8b74ec889c\",\"dweb:/ipfs/Qmc1E9u25Tjoz2qgTrsDGfm7xq4nJKgFMNDH5rNRmqPQBu\"]},\"/media/adityachandak/Local Disk/Projects/InOut/repo/doPatti/contracts/src/ownable.sol\":{\"keccak256\":\"0x26d375c3ba9166662bc8677c618cbe476b081dfe5e6c914cba1e5a48dac557d4\",\"urls\":[\"bzz-raw://0690f6c524cb8d9182631be7b4b11d05903109992b09caf83d72a2543593f520\",\"dweb:/ipfs/QmZmDGuvnmtd1HWJoNymiV6HuyhhRX3qHkbSydCVFb21g1\"]},\"/media/adityachandak/Local Disk/Projects/InOut/repo/doPatti/contracts/src/playerfactory.sol\":{\"keccak256\":\"0x01b1918b79e84444324be987969783b62acba5944e14d7f73d52c1439d9ee20c\",\"urls\":[\"bzz-raw://ff79a8c0b10cf6e3d7f75fdfdd60ec690a9acb7019392e275a2c1b55142a0a2b\",\"dweb:/ipfs/QmX2aVyUE6E9ZmcjwyRtrbAJ2DkZkA3SVaG2Xc7X2QHoid\"]},\"/media/adityachandak/Local Disk/Projects/InOut/repo/doPatti/contracts/src/playerhelper.sol\":{\"keccak256\":\"0x1fe1695609f19a465bca8dadfeb204b919ce07a84ffeac4726c4bb312a242e87\",\"urls\":[\"bzz-raw://b57542c7497ddd66e5277b3d53f2e4c9ca1c4c1984de04824b62fbc1540ceca4\",\"dweb:/ipfs/QmbLTMbGFuJZX3cspVvpEhcvKHbHGuRVpaoceCJ1vVB1x7\"]}},\"version\":1}",
    "bytecode": "608060408190526034600155600a60025560646003556000600781905580546001600160a01b03191633178082556001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610ecf8061006b6000396000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101465780638f32d59b14610177578063954c18d2146101a0578063d0e30db0146102a0578063f2fde38b146102a8578063f71d96cb146102db576100a7565b806313c390ef146100ac5780632bf3312e146100d35780633ccfd60b146100ff57806351f5ee0214610114578063715018a61461012957806375479c341461013e575b600080fd5b3480156100b857600080fd5b506100c1610320565b60408051918252519081900360200190f35b3480156100df57600080fd5b506100fd600480360360208110156100f657600080fd5b5035610356565b005b34801561010b57600080fd5b506100fd61036c565b34801561012057600080fd5b506100fd61045d565b34801561013557600080fd5b506100fd610648565b6100fd6106a3565b34801561015257600080fd5b5061015b6107a7565b604080516001600160a01b039092168252519081900360200190f35b34801561018357600080fd5b5061018c6107b6565b604080519115158252519081900360200190f35b3480156101ac57600080fd5b50610250600480360360208110156101c357600080fd5b8101906020810181356401000000008111156101de57600080fd5b8201836020820111156101f057600080fd5b8035906020019184602083028401116401000000008311171561021257600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506107c7945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561028c578181015183820152602001610274565b505050509050019250505060405180910390f35b6100fd610b6f565b3480156102b457600080fd5b506100fd600480360360208110156102cb57600080fd5b50356001600160a01b0316610be8565b3480156102e757600080fd5b50610305600480360360208110156102fe57600080fd5b5035610c02565b6040805192835260ff90911660208301528051918290030190f35b3360009081526005602052604081205460048054909190811061033f57fe5b906000526020600020906002020160000154905090565b61035e6107b6565b61036757600080fd5b600255565b3360008181526005602052604081205460048054839290811061038b57fe5b90600052602060002090600202016000015410156103e6576040805162461bcd60e51b815260206004820152601360248201527224b739bab33334b1b4b2b73a10333ab732399760691b604482015290519081900360640190fd5b3360009081526005602052604081205460048054909190811061040557fe5b600091825260208220600290910201546040519092503391662386f26fc10000840280156108fc02929091818181858888f1935050505015801561044d573d6000803e3d6000fd5b506104583382610c30565b505050565b6002543360009081526005602052604090205460048054909190811061047f57fe5b90600052602060002090600202016000015410156104db576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015290519081900360640190fd5b600780546001908101918290555460408051426020808301919091523360601b828401526054808301959095528251808303909501855260749091019091528251920191909120600091908161052d57fe5b0660010190505b60ff8082166000908152600860205260409020541615156001146105ab57600780546001908101918290555460408051426020808301919091523360601b828401526054808301959095528251808303909501855260749091019091528251920191909120816105a057fe5b066001019050610534565b60ff81166000908152600860209081526040808320805460ff1916600117905533835260059091529020546004805483929081106105e557fe5b600091825260209182902060029190910201600101805460ff191660ff938416179055604080513381529284169183019190915280517fdf75c2b0d26e5809dd27dc43c8fa1886221c1a59b3ee33775901d391405cdb759281900390910190a150565b6106506107b6565b61065957600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600160005b6004548110156106e2576000818152600660205260409020546001600160a01b03163314156106da57600091506106e2565b6001016106a8565b5060018115151461072b576040805162461bcd60e51b815260206004820152600e60248201526d283630bcb2b91032bc34b9ba399760911b604482015290519081900360640190fd5b662386f26fc10000341015610780576040805162461bcd60e51b8152602060048201526016602482015275283630bcb2b91030b63932b0b23c9032bc34b9ba399760511b604482015290519081900360640190fd5b6000670de0b6b3a764000060035434028161079757fe5b0490506107a381610cf6565b5050565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60606000600190506000600d600460056000876000815181106107e657fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020548154811061081957fe5b600091825260209091206001600290920201015460ff168161083757fe5b0660010190506000805b85518160ff1610156108f4576000600d6004600560008a8660ff168151811061086657fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020548154811061089957fe5b600091825260209091206001600290920201015460ff16816108b757fe5b0660010190508360ff168160ff1611156108d6578093508194506108eb565b8360ff168160ff1614156108eb576001909201915b50600101610841565b5060018551038160ff16141561091e5750506040805160008152602081019091529150610b6a9050565b6060855160405190808252806020026020018201604052801561094b578160200160208202803883390190505b5090506000805b87518160ff161015610a2a576000600d6004600560008c8660ff168151811061097757fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054815481106109aa57fe5b600091825260209091206001600290920201015460ff16816109c857fe5b0660010190508560ff168160ff161415610a2157888260ff16815181106109eb57fe5b6020026020010151848460ff1681518110610a0257fe5b6001600160a01b03909216602092830291909101909101526001909201915b50600101610952565b5060025460ff8216908102906000908281610a4157fe5b04905060005b89518160ff161015610b2e576000600d6004600560008e8660ff1681518110610a6c57fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205481548110610a9f57fe5b600091825260209091206001600290920201015460ff1681610abd57fe5b0660010190508760ff168160ff161415610afc5760ff8216600090815260066020526040902054610af7906001600160a01b031684610de9565b610b25565b60ff8216600090815260066020526040902054600254610b25916001600160a01b031690610c30565b50600101610a47565b5060015b60348160ff1611610b5f5760ff81166000908152600860205260409020805460ff19169055600101610b32565b509296505050505050505b919050565b662386f26fc10000341015610bc1576040805162461bcd60e51b815260206004820152601360248201527224b739bab33334b1b4b2b73a10333ab732399760691b604482015290519081900360640190fd5b6000670de0b6b3a7640000600354340281610bd857fe5b049050610be53382610de9565b50565b610bf06107b6565b610bf957600080fd5b610be581610e2c565b60048181548110610c0f57fe5b60009182526020909120600290910201805460019091015490915060ff1682565b33600090815260056020526040902054600480548492849283929091908110610c5557fe5b9060005260206000209060020201600001541015610cb0576040805162461bcd60e51b815260206004820152601360248201527224b739bab33334b1b4b2b73a10333ab732399760691b604482015290519081900360640190fd5b6001600160a01b038416600090815260056020526040902054600480548592908110610cd857fe5b60009182526020909120600290910201805491909103905550505050565b604080518082018252828152600060208083018281526004805460018101825581855294517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b60029096029586015590517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c909401805460ff191660ff909516949094179093558254338084526005835285842060001992830190559354018252600681529083902080546001600160a01b031916831790558251918252810183905281517f6b8fe0f067804a78a12efa88b8428446c8d8a703d5604dffc63ac27fcbdcfd0d929181900390910190a150565b6001600160a01b038216600090815260056020526040902054600480548392908110610e1157fe5b60009182526020909120600290910201805490910190555050565b6001600160a01b038116610e3f57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea265627a7a72315820d757571d7933f0a39efe4897f93c57758fd3b6f23b3c49586ea843fa0249418f64736f6c634300050b0032",
    "deployedBytecode": "6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101465780638f32d59b14610177578063954c18d2146101a0578063d0e30db0146102a0578063f2fde38b146102a8578063f71d96cb146102db576100a7565b806313c390ef146100ac5780632bf3312e146100d35780633ccfd60b146100ff57806351f5ee0214610114578063715018a61461012957806375479c341461013e575b600080fd5b3480156100b857600080fd5b506100c1610320565b60408051918252519081900360200190f35b3480156100df57600080fd5b506100fd600480360360208110156100f657600080fd5b5035610356565b005b34801561010b57600080fd5b506100fd61036c565b34801561012057600080fd5b506100fd61045d565b34801561013557600080fd5b506100fd610648565b6100fd6106a3565b34801561015257600080fd5b5061015b6107a7565b604080516001600160a01b039092168252519081900360200190f35b34801561018357600080fd5b5061018c6107b6565b604080519115158252519081900360200190f35b3480156101ac57600080fd5b50610250600480360360208110156101c357600080fd5b8101906020810181356401000000008111156101de57600080fd5b8201836020820111156101f057600080fd5b8035906020019184602083028401116401000000008311171561021257600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506107c7945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561028c578181015183820152602001610274565b505050509050019250505060405180910390f35b6100fd610b6f565b3480156102b457600080fd5b506100fd600480360360208110156102cb57600080fd5b50356001600160a01b0316610be8565b3480156102e757600080fd5b50610305600480360360208110156102fe57600080fd5b5035610c02565b6040805192835260ff90911660208301528051918290030190f35b3360009081526005602052604081205460048054909190811061033f57fe5b906000526020600020906002020160000154905090565b61035e6107b6565b61036757600080fd5b600255565b3360008181526005602052604081205460048054839290811061038b57fe5b90600052602060002090600202016000015410156103e6576040805162461bcd60e51b815260206004820152601360248201527224b739bab33334b1b4b2b73a10333ab732399760691b604482015290519081900360640190fd5b3360009081526005602052604081205460048054909190811061040557fe5b600091825260208220600290910201546040519092503391662386f26fc10000840280156108fc02929091818181858888f1935050505015801561044d573d6000803e3d6000fd5b506104583382610c30565b505050565b6002543360009081526005602052604090205460048054909190811061047f57fe5b90600052602060002090600202016000015410156104db576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015290519081900360640190fd5b600780546001908101918290555460408051426020808301919091523360601b828401526054808301959095528251808303909501855260749091019091528251920191909120600091908161052d57fe5b0660010190505b60ff8082166000908152600860205260409020541615156001146105ab57600780546001908101918290555460408051426020808301919091523360601b828401526054808301959095528251808303909501855260749091019091528251920191909120816105a057fe5b066001019050610534565b60ff81166000908152600860209081526040808320805460ff1916600117905533835260059091529020546004805483929081106105e557fe5b600091825260209182902060029190910201600101805460ff191660ff938416179055604080513381529284169183019190915280517fdf75c2b0d26e5809dd27dc43c8fa1886221c1a59b3ee33775901d391405cdb759281900390910190a150565b6106506107b6565b61065957600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600160005b6004548110156106e2576000818152600660205260409020546001600160a01b03163314156106da57600091506106e2565b6001016106a8565b5060018115151461072b576040805162461bcd60e51b815260206004820152600e60248201526d283630bcb2b91032bc34b9ba399760911b604482015290519081900360640190fd5b662386f26fc10000341015610780576040805162461bcd60e51b8152602060048201526016602482015275283630bcb2b91030b63932b0b23c9032bc34b9ba399760511b604482015290519081900360640190fd5b6000670de0b6b3a764000060035434028161079757fe5b0490506107a381610cf6565b5050565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60606000600190506000600d600460056000876000815181106107e657fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020548154811061081957fe5b600091825260209091206001600290920201015460ff168161083757fe5b0660010190506000805b85518160ff1610156108f4576000600d6004600560008a8660ff168151811061086657fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020548154811061089957fe5b600091825260209091206001600290920201015460ff16816108b757fe5b0660010190508360ff168160ff1611156108d6578093508194506108eb565b8360ff168160ff1614156108eb576001909201915b50600101610841565b5060018551038160ff16141561091e5750506040805160008152602081019091529150610b6a9050565b6060855160405190808252806020026020018201604052801561094b578160200160208202803883390190505b5090506000805b87518160ff161015610a2a576000600d6004600560008c8660ff168151811061097757fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054815481106109aa57fe5b600091825260209091206001600290920201015460ff16816109c857fe5b0660010190508560ff168160ff161415610a2157888260ff16815181106109eb57fe5b6020026020010151848460ff1681518110610a0257fe5b6001600160a01b03909216602092830291909101909101526001909201915b50600101610952565b5060025460ff8216908102906000908281610a4157fe5b04905060005b89518160ff161015610b2e576000600d6004600560008e8660ff1681518110610a6c57fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205481548110610a9f57fe5b600091825260209091206001600290920201015460ff1681610abd57fe5b0660010190508760ff168160ff161415610afc5760ff8216600090815260066020526040902054610af7906001600160a01b031684610de9565b610b25565b60ff8216600090815260066020526040902054600254610b25916001600160a01b031690610c30565b50600101610a47565b5060015b60348160ff1611610b5f5760ff81166000908152600860205260409020805460ff19169055600101610b32565b509296505050505050505b919050565b662386f26fc10000341015610bc1576040805162461bcd60e51b815260206004820152601360248201527224b739bab33334b1b4b2b73a10333ab732399760691b604482015290519081900360640190fd5b6000670de0b6b3a7640000600354340281610bd857fe5b049050610be53382610de9565b50565b610bf06107b6565b610bf957600080fd5b610be581610e2c565b60048181548110610c0f57fe5b60009182526020909120600290910201805460019091015490915060ff1682565b33600090815260056020526040902054600480548492849283929091908110610c5557fe5b9060005260206000209060020201600001541015610cb0576040805162461bcd60e51b815260206004820152601360248201527224b739bab33334b1b4b2b73a10333ab732399760691b604482015290519081900360640190fd5b6001600160a01b038416600090815260056020526040902054600480548592908110610cd857fe5b60009182526020909120600290910201805491909103905550505050565b604080518082018252828152600060208083018281526004805460018101825581855294517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b60029096029586015590517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c909401805460ff191660ff909516949094179093558254338084526005835285842060001992830190559354018252600681529083902080546001600160a01b031916831790558251918252810183905281517f6b8fe0f067804a78a12efa88b8428446c8d8a703d5604dffc63ac27fcbdcfd0d929181900390910190a150565b6001600160a01b038216600090815260056020526040902054600480548392908110610e1157fe5b60009182526020909120600290910201805490910190555050565b6001600160a01b038116610e3f57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea265627a7a72315820d757571d7933f0a39efe4897f93c57758fd3b6f23b3c49586ea843fa0249418f64736f6c634300050b0032",
    "sourceMap": "55:475:0:-;;;;;158:2:2;139:21;;184:2;166:20;;214:3;192:25;;-1:-1:-1;155:18:3;;;;501:19:1;;-1:-1:-1;;;;;;501:19:1;510:10;501:19;;;;-1:-1:-1;;;;;564:6:1;;531:40;;-1:-1:-1;;531:40:1;55:475:0;;;;;;",
    "deployedSourceMap": "55:475:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;790:112:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;790:112:2;;;:::i;:::-;;;;;;;;;;;;;;;;425:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;425:102:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;425:102:2;;:::i;:::-;;303:225:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;303:225:0;;;:::i;368:487:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;368:487:3;;;:::i;1254:127:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1254:127:1;;;:::i;1207:210:2:-;;;:::i;629:70:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;629:70:1;;;:::i;:::-;;;;-1:-1:-1;;;;;629:70:1;;;;;;;;;;;;;;912:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;912:83:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;861:1600:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;861:1600:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;861:1600:3;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;861:1600:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;861:1600:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;861:1600:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;861:1600:3;;-1:-1:-1;861:1600:3;;-1:-1:-1;;;;;861:1600:3:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;861:1600:3;;;;;;;;;;;;;;;;;94:203:0;;;:::i;1539:101:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1539:101:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1539:101:1;-1:-1:-1;;;;;1539:101:1;;:::i;299:23:2:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;299:23:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;299:23:2;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;790:112;877:10;830:4;861:27;;;:15;:27;;;;;;853:7;:36;;:7;;861:27;853:36;;;;;;;;;;;;;;;;:42;;;846:49;;790:112;:::o;425:102::-;812:9:1;:7;:9::i;:::-;804:18;;;;;;496:10:2;:24;425:102::o;303:225:0:-;351:10;363:1;2675:27:3;;;:15;:27;;;;;;2667:7;:36;;363:1:0;;2675:27:3;2667:36;;;;;;;;;;;;;;;;:42;;;:50;;2659:81;;;;;-1:-1:-1;;;2659:81:3;;;;;;;;;;;;-1:-1:-1;;;2659:81:3;;;;;;;;;;;;;;;413:10:0;376;397:27;;;:15;:27;;;;;;389:7;:36;;:7;;397:27;389:36;;;;;;;;;;;;;;;;;;:42;441:39;;389:42;;-1:-1:-1;441:10:0;;461;:18;;441:39;;;;;461:18;;441:39;389:36;441:39;461:18;441:10;:39;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;441:39:0;490:31;503:10;515:5;490:12;:31::i;:::-;2750:1:3;303:225:0;;:::o;368:487:3:-;309:10;;287;271:27;;;;:15;:27;;;;;;263:7;:36;;:7;;271:27;263:36;;;;;;;;;;;;;;;;:42;;;:56;;255:89;;;;;-1:-1:-1;;;255:89:3;;;;;;;;;;;;-1:-1:-1;;;255:89:3;;;;;;;;;;;;;;;423:9;:11;;;;;;;;;;527;478:44;;;495:3;478:44;;;;;;;;500:10;478:44;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;478:44:3;;;;;;;468:55;;;;;;;;423:9;;527:11;;463:75;;;;;542:1;457:86;444:99;;553:171;559:10;;;;;;;;:4;:10;;;;;;;:18;;:10;:18;553:171;;595:9;:11;;;;;;;;;;697;648:44;;;665:3;648:44;;;;;;;;670:10;648:44;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;648:44:3;;;;;;;638:55;;;;;;;;697:11;633:75;;;;;712:1;627:86;620:93;;553:171;;;733:10;;;;;;;:4;:10;;;;;;;;:17;;-1:-1:-1;;733:17:3;746:4;733:17;;;784:10;768:27;;:15;:27;;;;;;760:7;:36;;738:4;;768:27;760:36;;;;;;;;;;;;;;;;;;;;;:41;;:48;;-1:-1:-1;;760:48:3;;;;;;;;823:25;;;831:10;823:25;;;;;;;;;;;;;;;;;;;;;;;;354:1;368:487::o;1254:127:1:-;812:9;:7;:9::i;:::-;804:18;;;;;;1348:1;1332:6;;1311:40;;-1:-1:-1;;;;;1332:6:1;;;;1311:40;;1348:1;;1311:40;1374:1;1357:19;;-1:-1:-1;;;;;;1357:19:1;;;1254:127::o;1207:210:2:-;953:4;941:9;967:171;984:7;:14;982:16;;967:171;;;1037:18;;;;:15;:18;;;;;;-1:-1:-1;;;;;1037:18:2;1023:10;:32;1020:108;;;1085:5;1078:12;;1108:5;;1020:108;999:3;;967:171;;;-1:-1:-1;1161:4:2;1155:10;;;;1147:36;;;;;-1:-1:-1;;;1147:36:2;;;;;;;;;;;;-1:-1:-1;;;1147:36:2;;;;;;;;;;;;;;;1286:10;1273:9;:23;;1265:57;;;;;-1:-1:-1;;;1265:57:2;;;;;;;;;;;;-1:-1:-1;;;1265:57:2;;;;;;;;;;;;;;;1332:10;1374:6;1357:14;;1345:9;:26;:35;;;;;;1332:48;;1390:20;1404:5;1390:13;:20::i;:::-;1193:1;1207:210;:::o;629:70:1:-;666:7;688:6;-1:-1:-1;;;;;688:6:1;629:70;:::o;912:83::-;951:4;984:6;-1:-1:-1;;;;;984:6:1;970:10;:20;;912:83::o;861:1600:3:-;919:16;947:11;961:1;947:15;;972;1032:2;990:7;998:15;:25;1014:5;1020:1;1014:8;;;;;;;;;;;;;;-1:-1:-1;;;;;998:25:3;-1:-1:-1;;;;;998:25:3;;;;;;;;;;;;;990:34;;;;;;;;;;;;;;;;:39;:34;;;;;:39;;;;:44;;;;;;1037:1;990:48;;-1:-1:-1;1048:13:3;;1075:336;1093:5;:12;1091:1;:14;;;1075:336;;;1127:14;1186:2;1144:7;1152:15;:25;1168:5;1174:1;1168:8;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1152:25:3;-1:-1:-1;;;;;1152:25:3;;;;;;;;;;;;;1144:34;;;;;;;;;;;;;;;;:39;:34;;;;;:39;;;;:44;;;;;;1191:1;1144:48;1127:65;;1220:9;1209:20;;:8;:20;;;1206:195;;;1264:8;1252:20;;1298:1;1290:9;;1206:195;;;1347:9;1335:21;;:8;:21;;;1332:69;;;1377:9;;;;;1332:69;-1:-1:-1;1106:3:3;;1075:336;;;;1449:1;1434:5;:12;:16;1423:7;:27;;;1420:122;;;-1:-1:-1;;1490:16:3;;;1504:1;1490:16;;;;;;;;;-1:-1:-1;1520:11:3;;-1:-1:-1;1520:11:3;1420:122;1552:24;1593:5;:12;1579:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;1579:27:3;-1:-1:-1;1552:54:3;-1:-1:-1;1616:9:3;;1639:249;1660:5;:12;1656:1;:16;;;1639:249;;;1692:14;1751:2;1709:7;1717:15;:25;1733:5;1739:1;1733:8;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1717:25:3;-1:-1:-1;;;;;1717:25:3;;;;;;;;;;;;;1709:34;;;;;;;;;;;;;;;;:39;:34;;;;;:39;;;;:44;;;;;;1756:1;1709:48;1692:65;;1786:9;1774:21;;:8;:21;;;1771:107;;;1832:5;1838:1;1832:8;;;;;;;;;;;;;;;;1817:7;1825:3;1817:12;;;;;;;;;;-1:-1:-1;;;;;1817:23:3;;;:12;;;;;;;;;;;:23;1858:5;;;;;1771:107;-1:-1:-1;1673:3:3;;1639:249;;;-1:-1:-1;1913:10:3;;1909:14;;;;;;;1898:8;;1909:14;;1952:9;;;;;;-1:-1:-1;1976:7:3;1972:340;1993:5;:12;1989:1;:16;;;1972:340;;;2026:14;2085:2;2043:7;2051:15;:25;2067:5;2073:1;2067:8;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2051:25:3;-1:-1:-1;;;;;2051:25:3;;;;;;;;;;;;;2043:34;;;;;;;;;;;;;;;;:39;:34;;;;;:39;;;;:44;;;;;;2090:1;2043:48;2026:65;;2120:9;2108:21;;:8;:21;;;2105:197;;;2161:18;;;;;;;:15;:18;;;;;;2151:42;;-1:-1:-1;;;;;2161:18:3;2181:11;2151:9;:42::i;:::-;2105:197;;;2256:18;;;;;;;:15;:18;;;;;;2276:10;;2243:44;;-1:-1:-1;;;;;2256:18:3;;2243:12;:44::i;:::-;-1:-1:-1;2007:3:3;;1972:340;;;-1:-1:-1;2369:1:3;2357:65;2374:2;2371:1;:5;;;2357:65;;2396:7;;;2406:5;2396:7;;;:4;:7;;;;;:15;;-1:-1:-1;;2396:15:3;;;;2377:3;2357:65;;;-1:-1:-1;2447:7:3;;-1:-1:-1;;;;;;;861:1600:3;;;;:::o;94:203:0:-;161:10;148:9;:23;;140:54;;;;;-1:-1:-1;;;140:54:0;;;;;;;;;;;;-1:-1:-1;;;140:54:0;;;;;;;;;;;;;;;204:10;246:6;229:14;;217:9;:26;:35;;;;;;204:48;;262:28;272:10;284:5;262:9;:28::i;:::-;94:203;:::o;1539:101:1:-;812:9;:7;:9::i;:::-;804:18;;;;;;1607:28;1626:8;1607:18;:28::i;299:23:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;299:23:2;;;:::o;2764:158:3:-;2691:10;2675:27;;;;:15;:27;;;;;;2667:7;:36;;2842:5;;2849:6;;;;2667:7;;2675:27;2667:36;;;;;;;;;;;;;;;;:42;;;:50;;2659:81;;;;;-1:-1:-1;;;2659:81:3;;;;;;;;;;;;-1:-1:-1;;;2659:81:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;2876:22:3;;;;;;:15;:22;;;;;;2868:7;:31;;2909:6;;2876:22;2868:31;;;;;;;;;;;;;;;;;;;:47;;;;;;;;-1:-1:-1;;;;2764:158:3:o;532:252:2:-;600:16;;;;;;;;;;;-1:-1:-1;600:16:2;;;;;;;587:7;27:10:-1;;39:1;23:18;;45:23;;587:30:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;587:30:2;600:16;587:30;;;;;;;;;;657:14;;643:10;627:27;;;:15;:27;;;;;-1:-1:-1;;657:18:2;;;627:48;;701:14;;:18;685:35;;:15;:35;;;;;;:48;;-1:-1:-1;;;;;;685:48:2;;;;;748:29;;;;;;;;;;;;;;;;;;;;;;;532:252;:::o;2467:119:3:-;-1:-1:-1;;;;;2540:22:3;;;;;;:15;:22;;;;;;2532:7;:31;;2573:6;;2540:22;2532:31;;;;;;;;;;;;;;;;;;;:47;;;;;;;-1:-1:-1;;2467:119:3:o;1771:169:1:-;-1:-1:-1;;;;;1840:22:1;;1832:31;;;;;;1895:6;;;1874:38;;-1:-1:-1;;;;;1874:38:1;;;;1895:6;;;1874:38;;;1918:6;:17;;-1:-1:-1;;;;;;1918:17:1;-1:-1:-1;;;;;1918:17:1;;;;;;;;;;1771:169::o",
    "sourcePath": "/media/adityachandak/Local Disk/Projects/InOut/repo/doPatti/contracts/src/cashier.sol",
    "compiler": {
        "name": "solc",
        "version": "0.5.11+commit.c082d0b4"
    },
    "ast": {
        "absolutePath": "/media/adityachandak/Local Disk/Projects/InOut/repo/doPatti/contracts/src/cashier.sol",
        "exportedSymbols": {
            "Cashier": [
                69
            ]
        },
        "id": 70,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.5",
                    ".9"
                ],
                "nodeType": "PragmaDirective",
                "src": "0:23:0"
            },
            {
                "absolutePath": "/media/adityachandak/Local Disk/Projects/InOut/repo/doPatti/contracts/src/playerhelper.sol",
                "file": "./playerhelper.sol",
                "id": 2,
                "nodeType": "ImportDirective",
                "scope": 70,
                "sourceUnit": 770,
                "src": "25:28:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "baseContracts": [
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 3,
                            "name": "PlayerHelper",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 769,
                            "src": "75:12:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PlayerHelper_$769",
                                "typeString": "contract PlayerHelper"
                            }
                        },
                        "id": 4,
                        "nodeType": "InheritanceSpecifier",
                        "src": "75:12:0"
                    }
                ],
                "contractDependencies": [
                    178,
                    352,
                    769
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": true,
                "id": 69,
                "linearizedBaseContracts": [
                    69,
                    769,
                    352,
                    178
                ],
                "name": "Cashier",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 32,
                            "nodeType": "Block",
                            "src": "130:167:0",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 11,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 8,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 784,
                                                        "src": "148:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 9,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "148:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "302e3031",
                                                    "id": 10,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "161:10:0",
                                                    "subdenomination": "ether",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_10000000000000000_by_1",
                                                        "typeString": "int_const 10000000000000000"
                                                    },
                                                    "value": "0.01"
                                                },
                                                "src": "148:23:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "hexValue": "496e73756666696369656e742066756e64732e",
                                                "id": 12,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "172:21:0",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb",
                                                    "typeString": "literal_string \"Insufficient funds.\""
                                                },
                                                "value": "Insufficient funds."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb",
                                                    "typeString": "literal_string \"Insufficient funds.\""
                                                }
                                            ],
                                            "id": 7,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                787,
                                                788
                                            ],
                                            "referencedDeclaration": 788,
                                            "src": "140:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 13,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "140:54:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 14,
                                    "nodeType": "ExpressionStatement",
                                    "src": "140:54:0"
                                },
                                {
                                    "assignments": [
                                        16
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 16,
                                            "name": "coins",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 32,
                                            "src": "204:10:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 15,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "204:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 25,
                                    "initialValue": {
                                        "argumentTypes": null,
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 24,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "argumentTypes": null,
                                            "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "id": 20,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 17,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 784,
                                                    "src": "217:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 18,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "value",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "217:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                                "argumentTypes": null,
                                                "id": 19,
                                                "name": "conversionRate",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 198,
                                                "src": "229:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "src": "217:26:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                            "argumentTypes": null,
                                            "commonType": {
                                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                "typeString": "int_const 1000000000000000000"
                                            },
                                            "id": 23,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "3130",
                                                "id": 21,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "246:2:0",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                },
                                                "value": "10"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "3138",
                                                "id": 22,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "250:2:0",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_18_by_1",
                                                    "typeString": "int_const 18"
                                                },
                                                "value": "18"
                                            },
                                            "src": "246:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                "typeString": "int_const 1000000000000000000"
                                            }
                                        },
                                        "src": "217:35:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "204:48:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 27,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 784,
                                                    "src": "272:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 28,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "272:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 29,
                                                "name": "coins",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 16,
                                                "src": "284:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 26,
                                            "name": "_addCoins",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 726,
                                            "src": "262:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 30,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "262:28:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 31,
                                    "nodeType": "ExpressionStatement",
                                    "src": "262:28:0"
                                }
                            ]
                        },
                        "documentation": null,
                        "id": 33,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "deposit",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 5,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "110:2:0"
                        },
                        "returnParameters": {
                            "id": 6,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "130:0:0"
                        },
                        "scope": 69,
                        "src": "94:203:0",
                        "stateMutability": "payable",
                        "superFunction": null,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 67,
                            "nodeType": "Block",
                            "src": "366:162:0",
                            "statements": [
                                {
                                    "assignments": [
                                        42
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 42,
                                            "name": "coins",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 67,
                                            "src": "376:10:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 41,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "376:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 50,
                                    "initialValue": {
                                        "argumentTypes": null,
                                        "expression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 43,
                                                "name": "players",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 206,
                                                "src": "389:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_Player_$203_storage_$dyn_storage",
                                                    "typeString": "struct PlayerFactory.Player storage ref[] storage ref"
                                                }
                                            },
                                            "id": 48,
                                            "indexExpression": {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 44,
                                                    "name": "addressToPlayer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 210,
                                                    "src": "397:15:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                        "typeString": "mapping(address => uint256)"
                                                    }
                                                },
                                                "id": 47,
                                                "indexExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 45,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 784,
                                                        "src": "413:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 46,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "413:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "397:27:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "389:36:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Player_$203_storage",
                                                "typeString": "struct PlayerFactory.Player storage ref"
                                            }
                                        },
                                        "id": 49,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "coins",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 200,
                                        "src": "389:42:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "376:55:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 58,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "302e3031",
                                                    "id": 56,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "461:10:0",
                                                    "subdenomination": "ether",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_10000000000000000_by_1",
                                                        "typeString": "int_const 10000000000000000"
                                                    },
                                                    "value": "0.01"
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                    "argumentTypes": null,
                                                    "id": 57,
                                                    "name": "coins",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 42,
                                                    "src": "474:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "461:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 51,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 784,
                                                    "src": "441:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 54,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "441:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 55,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "441:19:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 59,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "441:39:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 60,
                                    "nodeType": "ExpressionStatement",
                                    "src": "441:39:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 62,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 784,
                                                    "src": "503:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 63,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "503:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 64,
                                                "name": "coins",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 42,
                                                "src": "515:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 61,
                                            "name": "_reduceCoins",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 768,
                                            "src": "490:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 65,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "490:31:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 66,
                                    "nodeType": "ExpressionStatement",
                                    "src": "490:31:0"
                                }
                            ]
                        },
                        "documentation": null,
                        "id": 68,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "argumentTypes": null,
                                        "expression": {
                                            "argumentTypes": null,
                                            "id": 36,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 784,
                                            "src": "351:3:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 37,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "351:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                        }
                                    },
                                    {
                                        "argumentTypes": null,
                                        "hexValue": "30",
                                        "id": 38,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "363:1:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                    }
                                ],
                                "id": 39,
                                "modifierName": {
                                    "argumentTypes": null,
                                    "id": 35,
                                    "name": "checkBalanceForMin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 747,
                                    "src": "332:18:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_modifier$_t_address_$_t_uint256_$",
                                        "typeString": "modifier (address,uint256)"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "332:33:0"
                            }
                        ],
                        "name": "withdraw",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 34,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "320:2:0"
                        },
                        "returnParameters": {
                            "id": 40,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "366:0:0"
                        },
                        "scope": 69,
                        "src": "303:225:0",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "external"
                    }
                ],
                "scope": 70,
                "src": "55:475:0"
            }
        ],
        "src": "0:530:0"
    },
    "functionHashes": {
        "_setCoinChange(uint256)": "2bf3312e",
        "deposit()": "d0e30db0",
        "getCoins()": "13c390ef",
        "getRandomCard()": "51f5ee02",
        "getWinner(address[])": "954c18d2",
        "isOwner()": "8f32d59b",
        "newPlayer()": "75479c34",
        "owner()": "8da5cb5b",
        "players(uint256)": "f71d96cb",
        "renounceOwnership()": "715018a6",
        "transferOwnership(address)": "f2fde38b",
        "withdraw()": "3ccfd60b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "758200",
            "executionCost": "87572",
            "totalCost": "845772"
        },
        "external": {
            "_setCoinChange(uint256)": "20479",
            "deposit()": "21303",
            "getCoins()": "978",
            "getRandomCard()": "infinite",
            "getWinner(address[])": "infinite",
            "isOwner()": "449",
            "newPlayer()": "infinite",
            "owner()": "437",
            "players(uint256)": "1106",
            "renounceOwnership()": "22481",
            "transferOwnership(address)": "22646",
            "withdraw()": "infinite"
        }
    }
}